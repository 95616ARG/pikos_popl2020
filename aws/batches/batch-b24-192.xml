<?xml version="1.0"?>
<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.18//EN" "https://www.sosy-lab.org/benchexec/benchmark-1.18.dtd">
<benchmark tool="tools.pikos" walltimelimit="14400 s" threads="1">
    <option name="-q"/>
    <option name="-w"/>
    <option name="--rm-db"/>
    <option name="--display-times">no</option>
    <option name="--display-summary">no</option>
    <option name="--progress">no</option>
    <option name="--inline-all"/>
    <option name="--proc">inter</option>
    <option name="--no-checks"/>
    <option name="--no-fixpoint-cache"/>
    <option name="--prec">mem</option>
    <option name="-d">interval</option>

    <rundefinition name="interval-base">
    </rundefinition>
    <rundefinition name="interval-cc2">
      <option name="--cc"/>
      <option name="-nt">2</option>
    </rundefinition>
    <rundefinition name="interval-cc4">
      <option name="--cc"/>
      <option name="-nt">4</option>
    </rundefinition>

    <tasks>
      <option name="-cs">0</option>
      <include>dummy.bc</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/eureka_01-1.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/eureka_01-2.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/eureka_05.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/for_bounded_loop1.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/for_infinite_loop_1.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/for_infinite_loop_2.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/heavy-1.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/heavy-2.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/insertion_sort-1.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/insertion_sort-2.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/invert_string-1.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/invert_string-2.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/invert_string-3.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/lu.cmp.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/ludcmp.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/matrix-1.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/matrix-2.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/n.c11.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/n.c24.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/n.c40.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/nec11.c</include>
    </tasks>
    <tasks>
      <option name="-cs">0</option>
      <include>SVC/loops/nec20.c</include>
    </tasks>
</benchmark>
